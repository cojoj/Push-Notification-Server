require 'sinatra'
require 'data_mapper'
require 'dm-core'
require 'dm-migrations'
require 'dm-sqlite-adapter'
require 'gcm'

DataMapper.setup(:default, 'sqlite:db/pns_db.db')

class Device
  include DataMapper::Resource
  
  property :id, String, key: true, unique: true, length: 200
  property :owner, String
  property :os, Integer		#1 - Android, 2 - iOS
  property :os_code, String       
end
DataMapper.finalize

configure :development do
    DataMapper.auto_upgrade!
    #DataMapper.auto_migrate!
end

get '/' do
  @devices = Device.all
  erb :addMessage
end

post '/send' do
  devicesIDs = params[:devicesIDs]
  message = params[:message]

  @devices = Array.new
  
  devicesIDs.each do |id|
    @devices << Device.get(id)
  end
  
  androids = Array.new
  #androids = "["
  
  @devices.each do |device|
    if device.os == 1
      androids << device.id 
    else
      # Handle requests for iOS
    end
  end
  
  puts androids;
  ids = androids.to_json
  puts ids
  #@ids = androids.join(",")
  api_key = "AIzaSyCHfOzDIlO-ewKLFd6LKCAkxwdsOg7f76w"
  gcm = GCM.new(api_key)
  #ids = androids.to_json
  #ids = ["1", "2"] 
  #puts ids
  data = {data: {score: "123"}, collapse_key: "updated_score"};
  response = gcm.send_notification(androids, data)
  
  puts response
  
  erb :list
end

post '/register' do
  @device = Device.new( :id    => params[:id],
                        :owner => params[:owner],
                        :os    => params[:os],
                        :os_code => params[:os_code])
                         
  
  if @device.save
    "Saving device to database - SUCCESS"
  else
    "Saving device to database - FAILURE"
  end
end
